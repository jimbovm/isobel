/* SPDX-License-Identifier: MIT-0

Copyright 2022-2024 Jimbo Brierley.

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
of the Software, and to permit persons to whom the Software is furnished to do 
so.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE. */

package com.github.jimbovm.isobel.actor.geography;
import com.github.jimbovm.isobel.bytecode.geography.FTypeCommand;

import jakarta.validation.constraints.NotNull;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * This bean represents castles which appear at the beginning and end of most
 * outdoor levels.
 */
@Getter
@Setter
@ToString
@XmlAccessorType(XmlAccessType.NONE)
@XmlRootElement(name = "castle")
public final class Castle extends GeographyActor {

	/** The size of a castle. */
	@Getter
	@AllArgsConstructor
	@XmlType(name = "size")
	@XmlEnum
	public static enum Size {
		/** 
		 * A small castle, as at the end of a level <i>x</i>-1 or
		 * <i>x</i>-2 in the original.
		 */
		@XmlEnumValue("SMALL") SMALL (6),
		/** 
		 * A large castle, as at the end of a level <i>x</i>-3 in the
		 * original.
		 */
		@XmlEnumValue("LARGE") LARGE (0);

		private final int id;
	}

	/** The size of the castle. */
	@XmlAttribute(name = "size")
	@NotNull private Size size = Size.SMALL;

	/**
	 * Create a new castle bean.
	 * 
	 * @param x The X position of the castle.
	 * @param size The size of the castle.
	 * @return A new castle bean with the supplied parameters.
	 */
	public static Castle create(int x, Size size) {
		var castle = new Castle();
		castle.setX(x);
		castle.setSize(size);
		return castle;
	}

	/**
	 * Unparse the bean to its in-game bytecode equivalent.
	 * 
	 * @param newPage Whether to set the new page flag in the generated bytecode. 
	 */
	public byte[] unparse(final boolean newPage) {
		return FTypeCommand.unparse(this, newPage);
	}
}
