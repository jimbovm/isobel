/* SPDX-License-Identifier: MIT-0

Copyright 2022-2024 Jimbo Brierley.

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
of the Software, and to permit persons to whom the Software is furnished to do 
so.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE. */

package com.github.jimbovm.isobel.actor.geography;

import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlRootElement;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import com.github.jimbovm.isobel.actor.Extensible;
import com.github.jimbovm.isobel.actor.YPlaceable;
import com.github.jimbovm.isobel.bytecode.geography.NormalCommand;

/**
 * This bean represents platforms with origin X and Y coordinates which are 
 * extensible along some axis.
 * 
 * Depending on the setting of an area's header bits, these objects are 
 * rendered either as trees, giant mushrooms or cannons. For trees, the 
 * extent controls the width of the platform and the (cosmetic) trunk; 
 * mushrooms work in the same way but the stem is always one block wide, 
 * and for cannons, the extent controls their height.
 * 
 * @see com.github.jimbovm.isobel.common.AreaHeader
 */
@Getter
@Setter
@ToString
@XmlAccessorType(XmlAccessType.NONE)
@XmlRootElement(name = "extensiblePlatform")
public final class ExtensiblePlatform extends GeographyActor implements YPlaceable, Extensible {

	/**
	 * Create a new extensible platform bean. 
	 * 
	 * @param x The X position of the platform.
	 * @param y The Y position of the platform.
	 * @param extent The extent of the platform.
	 * @return A new instance of <code>ExtensiblePlatform</code> with the given parameters.
	 */
	public static ExtensiblePlatform create(final int x, final int y, final int extent) {
		var platform = new ExtensiblePlatform();
		platform.setX(x);
		platform.setY(y);
		platform.setExtent(extent);
		return platform;
	}

	@XmlAttribute(name = "y")
	@Min(0) @Max(0xB) private int y;

	@XmlAttribute(name = "extent")
	@Min(0) private int extent;
	
	/**
	 * Unparse the bean to its in-game bytecode equivalent.
	 * 
	 * @param newPage Whether to set the new page flag in the generated bytecode. 
	 */
	public byte[] unparse(final boolean newPage) {
		return NormalCommand.unparse(this, newPage);
	}
}
